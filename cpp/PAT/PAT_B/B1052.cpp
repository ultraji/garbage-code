/*
1052 卖个萌 （20 分）
萌萌哒表情符号通常由“手”、“眼”、“口”三个主要部分组成。简单起见，我们假设一个表情符号是按下列格式输出的：

[左手]([左眼][口][右眼])[右手]
现给出可选用的符号集合，请你按用户的要求输出表情。

输入格式：
输入首先在前三行顺序对应给出手、眼、口的可选符号集。每个符号括在一对方括号 []内。题目保证每个集合都至少
有一个符号，并不超过 10 个符号；每个符号包含 1 到 4 个非空字符。

之后一行给出一个正整数 K，为用户请求的个数。随后 K 行，每行给出一个用户的符号选择，顺序为左手、左眼、口、
右眼、右手——这里只给出符号在相应集合中的序号（从 1 开始），数字间以空格分隔。

输出格式：
对每个用户请求，在一行中输出生成的表情。若用户选择的序号不存在，则输出 Are you kidding me? @\/@。

输入样例：
[╮][╭][o][~\][/~]  [<][>]
 [╯][╰][^][-][=][>][<][@][⊙]
[Д][▽][_][ε][^]  ...
4
1 1 2 2 2
6 8 1 5 5
3 3 4 3 3
2 10 3 9 3

输出样例：
╮(╯▽╰)╭
<(@Д=)/~
o(^ε^)o
Are you kidding me? @\/@
*/

#include <iostream>
using namespace std;

int main(){
    int len[3], k, h1, h2, e1, e2, m;
    string s[3][11], str, tmp;
    for(int i = 0; i < 3; i++){
        len[i] = 1;
        getline(cin, str);
        for(int j = 0; j < str.size(); j++){
            if(str[j]!='[' && str[j]!= ' ' && str[j]!=']'){
                s[i][len[i]] += str[j];
            }   
            if(str[j]==']'){
                len[i] ++;
            }
        }
    }
    cin >> k;
    for(int i = 0; i < k; i++){
        cin >> h1 >> e1 >> m >> e2 >> h2;
        if(h1 < len[0] && h2 < len[0] && e1 < len[1] && e2 < len[1] && m < len[2] && \
         h1 > 0 && h2 > 0 && e1 > 0 && e2 > 0 && m > 0 ){
            cout << s[0][h1] << '(' << s[1][e1] << s[2][m] << s[1][e2] << ')' << s[0][h2] << endl;
        }else{
            cout << "Are you kidding me? @\\/@" << endl;
        }
    }
    return 0;
}